{
  "Description": "Dynamic video marketing automation service",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Metadata": {
    "Comment": "Resources for webhook API."
  },
  "Resources": {
    "API": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "My API",
        "Name": "MyAPI"
      }
    },
    "APIDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "DependsOn": "APIWebhookMethodGET",
      "Properties": {
        "RestApiId": { "Ref": "API" }
      }
    },
    "APIWebhook": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": { "Fn::GetAtt": [ "API", "RootResourceId" ] },
        "PathPart": "{param1}",
        "RestApiId": { "Ref": "API" }
      }
    },
    "APIWebhookMethodGET": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseTemplates": {
                "application/json": "$input.params('whatever')"
              },
              "StatusCode": "200"
            },
            {
              "ResponseTemplates": {
                "application/json": "$input.params('whatever')"
              },
              "SelectionPattern": "[a-zA-Z]+.*",
              "StatusCode": "404"
            }
          ],
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "{\"param1\": \"$input.params('param1')\", \"param2\": \"$input.params('param2')\"}"
                ]
              ]
            }
          },
          "Type": "AWS",
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":lambda:path/2015-03-31/functions/",
                  {
                    "Fn::GetAtt": [
                      "Lambda",
                      "Arn"
                    ]
                  },
                  "/invocations"
                ]
              ]
            }
          },
          "MethodResponses": [
                {
                    "StatusCode": "200"
                },
                {
                    "StatusCode": "404"
                }
            ],
            "RequestParameters": {
              "method.request.path.param1": true,
              "method.request.querystring.param2": true
            },
            "ResourceId": {
              "Ref": "APIWebhook"
            },
            "RestApiId": {
              "Ref": "API"
            }
        }
    },
    "APILambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
            "Ref": "Lambda"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              { "Ref": "AWS::Region" },
              ":",
              { "Ref": "AWS::AccountId" },
              ":",
              { "Ref": "API" },
              "/*/GET/*"
            ]
          ]
        }
      }
    },
    "APIStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "CacheClusterEnabled": false,
        "DeploymentId": {
          "Ref": "APIDeployment"
        },
        "RestApiId": {
          "Ref": "API"
        },
        "StageName": "live"
      }
    },
    "LambdaRole": {
      "Type": "AWS::IAM::Role"
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [ "arn:aws:logs:*:*:*" ]
                }
              ]
            },
            "PolicyName": "LambdaPolicy"
          }
        ]
      }
    },
    "Lambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "\n",
              {{=require("../tools/jsonutils").formatAsJsonList("./webhook.py")}}
            ]
          }
        },
        "Handler": "lambda.lambda_handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [ "LambdaRole", "Arn" ]
        },
        "Runtime": "python3.7",
        "Timeout": 30
      }
    }
  },
  "Outputs": {
  }
}
